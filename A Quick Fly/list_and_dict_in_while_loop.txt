
Using a while Loop with Lists and Dictionaries
---------------------------------------------------

A for loop is effective for looping through a list, but you shouldn’t modify
a list inside a for loop because Python will have trouble keeping track of the
items in the list. To modify a list as you work through it, use a while loop.
Using while loops with lists and dictionaries allows you to collect, store, and
organize lots of input to examine and report on later.



Removing All Instances of Specific Values from a List
---------------------------------------------------------

In Chapter 3 we used remove() to remove a specific value from a list. The
remove() function worked because the value we were interested in appeared
only once in the list. But what if you want to remove all instances of a value
from a list?
Say you have a list of pets with the value 'cat' repeated several times. To
remove all instances of that value, you can run a while loop until 'cat' is no
longer in the list, as shown here:

pets = ['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat']
print(pets)
while 'cat' in pets:
pets.remove('cat')
print(pets)



Filling a Dictionary with User Input
-----------------------------------------


